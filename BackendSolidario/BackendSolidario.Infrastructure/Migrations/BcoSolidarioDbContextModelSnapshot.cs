// <auto-generated />
using System;
using BackendSolidario.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendSolidario.Infrastructure.Migrations
{
    [DbContext(typeof(BcoSolidarioDbContext))]
    partial class BcoSolidarioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendSolidario.Core.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cli_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar")
                        .HasColumnName("cli_contrasena");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("cli_estado");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar")
                        .HasColumnName("nombre");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar")
                        .HasColumnName("cli_salt");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar")
                        .HasColumnName("cli_usuario");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("BackendSolidario.Core.Models.Cuenta", b =>
                {
                    b.Property<string>("NumeroCuenta")
                        .HasMaxLength(16)
                        .HasColumnType("varchar")
                        .HasColumnName("cue_numero_cuenta");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cue_clienteId");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("cue_estado");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("cue_id");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("decimal(15,3)")
                        .HasColumnName("cue_saldo_inicial");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar")
                        .HasColumnName("cue_tipo_cuenta");

                    b.HasKey("NumeroCuenta");

                    b.HasIndex("ClienteId");

                    b.ToTable("cuenta", (string)null);
                });

            modelBuilder.Entity("BackendSolidario.Core.Models.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mov_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CuentaId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar")
                        .HasColumnName("mov_cuentaId");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("mov_usuario");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(15,3)")
                        .HasColumnName("mov_saldo");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar")
                        .HasColumnName("mov_tipo_movimiento");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(15,3)")
                        .HasColumnName("mov_valor");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.ToTable("movimiento", (string)null);
                });

            modelBuilder.Entity("BackendSolidario.Core.Models.Cuenta", b =>
                {
                    b.HasOne("BackendSolidario.Core.Models.Cliente", "Cliente")
                        .WithMany("Cuentas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BackendSolidario.Core.Models.Movimiento", b =>
                {
                    b.HasOne("BackendSolidario.Core.Models.Cuenta", "Cuenta")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("BackendSolidario.Core.Models.Cliente", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("BackendSolidario.Core.Models.Cuenta", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
